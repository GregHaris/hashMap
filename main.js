(()=>{"use strict";const e=new class{constructor(e=50){this.buckets=new Array(e),this.size=0}hash(e){let t=0,s=0;for(;s<e.length;)t=(31*t+e.charCodeAt(s))%this.buckets.length,s++;return t}set(e,t){let s=this.hash(e),h=0;for(this.buckets[s]||(this.buckets[s]=[]);h<this.buckets[s].length;){if(this.buckets[s][h][0]===e)return void(this.buckets[s][h][1]=t);h++}this.buckets[s].push([e,t]),this.size++}get(e){let t=this.hash(e);if(!this.buckets[t])return null;for(let s of this.buckets[t])if(s[0]===e)return s[1];return null}has(e){let t=this.hash(e);if(!this.buckets[t])return!1;for(let s of this.buckets[t])if(s[0]===e)return!0;return!1}remove(e){let t=this.hash(e),s=0;if(!this.buckets[t])return`Key '${e}' not found`;for(;s<this.buckets[t].length;){if(this.buckets[t][s][0]===e)return this.buckets[t].splice(s,1),this.size--,`key '${e}' and its hashes has been successfully deleted`;s++}return`Key '${e}' not found`}length(){return this.size}clear(){this.buckets=new Array(this.buckets.length),this.size=0}keys(){let e=[],t=!0;for(let s=0;s<this.buckets.length;s++)if(this.buckets[s]){t=!1;for(let t of this.buckets[s])e.push(t[0])}return t?"All Hash map bucket are empty":e}values(){let e=[],t=!0;for(let s=0;s<this.buckets.length;s++)if(this.buckets[s]){t=!1;for(let t of this.buckets[s])e.push(t[1])}return t?"All Hash map bucket are empty":e}entries(){let e=[],t=!0;for(let s=0;s<this.buckets.length;s++)if(this.buckets[s]){t=!1;for(let t of this.buckets[s])e.push(t)}return t?"All Hashmap bucket are empty":e}},t=new class{constructor(e=50){this.buckets=new Array(e),this.size=0}hash(e){let t=0,s=0;for(;s<e.length;)t=(31*t+e.charCodeAt(s))%this.buckets.length,s++;return t}add(e){let t=this.hash(e),s=0;for(this.buckets[t]||(this.buckets[t]=[]);s<this.buckets[t].length;){if(this.buckets[t][s]===e)return void(this.buckets[t]=e);s++}this.buckets[t].push(e),this.size++}has(e){let t=this.hash(e);if(!this.buckets[t])return!1;for(let s of this.buckets[t])if(s[0]===e)return!0;return!1}remove(e){let t=this.hash(e),s=0;if(!this.buckets[t])return`Key '${e}' not found`;for(;s<this.buckets[t].length;){if(this.buckets[t][s][0]===e)return this.buckets[t].splice(s,1),this.size--,`key '${e}' and its hashes has been successfully deleted`;s++}return`Key '${e}' not found`}length(){return this.size}clear(){this.buckets=new Array(this.buckets.length),this.size=0}keys(){let e=[],t=!0;for(let s=0;s<this.buckets.length;s++)if(this.buckets[s]){t=!1;for(let t of this.buckets[s])e.push(t)}return t?"All Hash map bucket are empty":e}};e.set("apple","red"),e.set("banana","yellow"),e.set("carrot","orange"),e.set("dog","brown"),e.set("elephant","gray"),e.set("frog","green"),e.set("grape","purple"),e.set("hat","black"),e.set("ice cream","white"),e.set("jacket","blue"),e.set("kite","pink"),e.set("lion","golden"),e.set("moon","silver"),t.add("apple","red"),t.add("banana","yellow"),t.add("carrot","orange"),t.add("dog","brown"),t.add("elephant","gray"),t.add("frog","green"),t.add("grape","purple"),t.add("hat","black"),t.add("ice cream","white"),t.add("jacket","blue"),t.add("kite","pink"),t.add("lion","golden"),t.add("moon","silver"),console.table(e.entries()),console.log(t)})();
//# sourceMappingURL=main.js.map